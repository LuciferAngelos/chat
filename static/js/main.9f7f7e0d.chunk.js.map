{"version":3,"sources":["components/socket/constants.js","utils/Context.js","api/Api.js","components/redux/usersReducer.js","components/common/navbar/WSTransferTest.js","components/redux/appReducer.js","components/common/navbar/NavBar.js","components/common/microphone/Microphone.js","components/redux/store.js","assets/src/preloader/preloader.gif","components/common/preloader/Preloader.js","utils/routes.js","components/common/screenCapture/ScreenCapture.js","components/common/chatRooms/chatBar.js","components/common/main/Main.js","components/socket/getWayConnect.js","App.js","reportWebVitals.js","index.js"],"names":["mainRoot","getWayWebSocket","WSSSContext","createContext","instance","Axios","baseURL","authAPI","get","SET_USER_DATA","GET_CURRENT_USERS_LIST","USER_JOINED","USER_LEFT","initialState","users","self","session_uuid","user_id","user_uuid","email","avatar","first_name","secon_name","last_name","phone","birthday","sex","company_uuid","company_name","company_position","company_role","system_role","isAuth","setAuthUserData","payload","type","WSTransferTest","socket","console","log","onClick","close","INITIALIZED_SUCCESS","ON_LINK_GOTTEN","ON_DIALOG","GET_OUTPUT_PLAYER_VOICE_FROM_CLIENT","GET_OUTPUT_PLAYER_SCREEN_FROM_SERVER","initialized","linkIsFetched","linkForSS","onDialog","outputPlayerVoiceFromClient","outputPlayerScreemFromSS","setLinkForSS","link","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","style","position","top","right","width","maxHeight","bgcolor","boxShadow","p","border","overflow","readPlayerFromPlayerList","buffer","startOffset","hasPosition","userUUIDLen","uuid","offset","readUtf8String","id","readUInt32LE","x","y","z","readFloatLE","state","readUInt8","NavBar","AudioContext","getUsersFromStore","setScreenBlob","record","classes","useState","openModal","setOpenModal","connected","setConnected","dispatch","useDispatch","useContext","sessionTokenForSS","userUUID","getConnectionType","lobbyUUID","webSocketSS","setUsers","webSocket","useRef","useEffect","start","linkSS","WebSocket","current","window","binaryType","onopen","array","Uint8Array","methodBuffer","Uint32Array","sessionBuffer","TextEncoder","encode","locationUUIDBuffer","set","send","readyState","onmessage","message","BufferStream","data","method","readInt32LE","countPlayers","index","user","push","setUsersFromList","JSON","stringify","setUserJoined","userUuid","voiceBody","Blob","blobForPlay","outputBlob","fileReader","FileReader","readAsDataURL","onloadend","base64String","result","audio","Audio","addEventListener","play","outputPlayerVoice","onclose","e","code","setTimeout","onerror","err","sendPlayerTick","audioChunk","byteLength","Float32Array","useMemo","pinging","interval","clearTimeout","className","AppBar","Toolbar","IconButton","edge","color","Typography","variant","Button","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","sx","component","length","map","u","mt","icon","height","reactmic","flex","Microphone","size","setRecord","stopRecord","setStopRecord","navigator","mediaDevices","getUserMedia","autoGainControl","channelCount","echoCancellation","delay","noiseSuppression","sampleRate","sampleSize","volume","video","then","stream","mediaRecorder","MediaRecorder","str","audioChunks","event","mimeType","arrayBuffer","audioBuffer","stop","startRecording","totallyStop","getTracks","forEach","track","Grid","container","justifyContent","item","Card","DialogActions","xs","red","reducers","combineReducers","app","action","voice","screen","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Preloader","routesTechPractices","routesStands","ScreenCapture","React","props","ref","autoPlay","roomsTechPracticeNames","displayMediaOptions","cursor","ChatBar","screenBlob","setOpen","openSt","setOpenSt","screenCaptureRef","videoTracks","a","getDisplayMedia","srcObject","screenStream","screenChunks","active","error","src","URL","createObjectURL","outputPlayerScreen","display","CssBaseline","Drawer","flexShrink","marginTop","boxSizing","List","ListItemButton","ListItemIcon","ListItemText","primary","Collapse","unmountOnExit","text","to","textDecoration","activeClassName","exact","ListItem","button","pl","Divider","flexDirection","m","maxWidth","disablePadding","margin","marginLeft","marginBottom","Main","sessionUUID","setLobbyUUID","handleConnectToGetWay","connectionType","newWS","connect","token","dataFromGetWay","parse","undefined","lobby_uuid","ip","port","getWayConnection","handleGetLobbyUUID","useCallback","target","value","Stack","direction","Input","onChange","App","promise","response","Promise","all","setLoaded","contextWSSS","setContextWSSS","useSelector","Provider","textAlign","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f7f7e0d.chunk.js","sourcesContent":["//variable for main root because of GHP deploy. \r\n//Probably needs to be switched to '/'\r\nexport const mainRoot = '/chat'\r\n\r\nexport const getWayWebSocket = \"wss://getway.dev.viexpo.ru:8010\";\r\n\r\n\r\nexport const CONST_X_VIEXPO_INTERNAL_TOKEN = 'x-viexpo-internal-token-test'\r\nexport const CONST_X_VIEXPO_SESSION_TOKEN_BODY = 'x-viexpo-session-token'\r\n\r\nexport const ToGetway_FromUnknown_AuthSocket = 0;\r\nexport const FromGetway_AuthSocket_Response = 1;\r\nexport const ToGetway_FromInternal_GetUser = 2;\r\nexport const ToGetway_FromInternal_GetUserFromSession = 3;\r\nexport const FromGetway_ToInternal_GetUserResponse = 4;\r\nexport const ToGetway_FromPlayer_GetMovementServer = 5;\r\nexport const FromGetway_FromPlayer_GetMovementServerResponse = 6;\r\nexport const ToGetway_FromPlayer_GetSoundServer = 7;\r\nexport const FromGetway_FromPlayer_GetSoundServerResponse = 8;\r\n\r\n\r\nexport const ToMovement_ToPlayerScene_PlayerTick = 9991;\r\nexport const FromMovement_FromPlayerScene_PlayerJoin = 9992;\r\nexport const FromMovement_FromPlayerScene_PlayerLeave = 9993;\r\nexport const FromMovement_FromPlayerScene_PlayerList = 9994;\r\nexport const FromMovement_FromPlayerScene_PlayerPosition = 9995;\r\nexport const FromSound_FromPlayerScene_PlayerVoice = 9996;\r\n\r\nexport const timeInterval = 1000;\r\n\r\n","import React, { createContext } from \"react\";\r\n\r\nexport const WSSSContext = createContext();","import * as Axios from 'axios';\r\n\r\n//axios base setup\r\nlet instance = Axios.create({\r\n\tbaseURL: 'https://getway.dev.viexpo.ru/api/',\r\n\t// headers: {\r\n\t// \t'x-viexpo-tenant': '0',\r\n\t// }\r\n});\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get('account/fake/get')\r\n\t}\r\n}","import { authAPI } from \"../../api/Api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CURRENT_USERS_LIST = 'GET_CURRENT_USERS_LIST';\r\nconst USER_JOINED = 'USER_JOINED';\r\nconst USER_LEFT = 'USER_LEFT';\r\n\r\nconst initialState = {\r\n\tusers: [],\r\n\tself: {\r\n\t\tsession_uuid: \"\",\r\n\t\tuser_id: null,\r\n\t\tuser_uuid: \"\",\r\n\t\temail: \"\",\r\n\t\tavatar: \"\",\r\n\t\tfirst_name: \"\",\r\n\t\tsecon_name: \"\",\r\n\t\tlast_name: \"\",\r\n\t\tphone: \"\",\r\n\t\tbirthday: \"\",\r\n\t\tsex: \"\",\r\n\t\tcompany_uuid: \"\",\r\n\t\tcompany_name: \"\",\r\n\t\tcompany_position: \"\",\r\n\t\tcompany_role: null,\r\n\t\tsystem_role: null\r\n\t},\r\n\tisAuth: false\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tself: { ...action.payload },\r\n\t\t\t\tisAuth: true\r\n\t\t\t};\r\n\t\tcase GET_CURRENT_USERS_LIST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.users\r\n\t\t\t};\r\n\t\tcase USER_JOINED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: [...state.users, action.user]\r\n\t\t\t};\r\n\t\tcase USER_LEFT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.filter(u => u.uuid != action.userUuid)\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n//ac\r\n\r\nexport const setAuthUserData = payload => ({ type: SET_USER_DATA, payload })\r\nexport const setUsersFromList = users => ({ type: GET_CURRENT_USERS_LIST, users })\r\nexport const setUserJoined = user => ({ type: USER_JOINED, user })\r\nexport const setUserLeft = userUuid => ({ type: USER_LEFT, userUuid })\r\n\r\n//thunk\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n\tlet response = await authAPI.me();\r\n\r\n\tif (response.data.code === 0) {\r\n\t\tlet payload = response.data.response.user\r\n\t\tdispatch(setAuthUserData(payload))\r\n\t}\r\n}","import react from 'react'\r\n\r\nexport const WSTransferTest = ({ socket }) => {\r\n\tconsole.log('this is the socket => ', socket);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tsdfsdf\r\n\t\t\t<button onClick={() => socket.close()}>close</button>\r\n\t\t</div>\r\n\t)\r\n}","import { getAuthUserData } from \"./usersReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\nconst TOKEN_USER_UUID_GOTTEN = 'TOKEN_USER_UUID_GOTTEN';\r\nconst ON_LINK_GOTTEN = 'ON_LINK_GOTTEN';\r\nconst ON_DIALOG = 'ON_DIALOG'\r\nconst GET_OUTPUT_PLAYER_VOICE_FROM_CLIENT = 'GET_OUTPUT_PLAYER_VOICE_FROM_CLIENT';\r\nconst GET_OUTPUT_PLAYER_SCREEN_FROM_SERVER = 'GET_OUTPUT_PLAYER_SCREEN_FROM_SERVER';\r\n\r\n\r\nlet initialState = {\r\n\tinitialized: false,\r\n\tlinkIsFetched: false,\r\n\tlinkForSS: '',\r\n\ttype: 1,\r\n\tonDialog: false,\r\n\toutputPlayerVoiceFromClient: null,\r\n\toutputPlayerScreemFromSS: null\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t};\r\n\t\tcase ON_DIALOG:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tonDialog: !state.onDialog\r\n\t\t\t}\r\n\t\tcase GET_OUTPUT_PLAYER_VOICE_FROM_CLIENT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\toutputPlayerVoiceFromClient: action.voice\r\n\t\t\t}\r\n\t\tcase GET_OUTPUT_PLAYER_SCREEN_FROM_SERVER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\toutputPlayerScreemFromSS: action.screen\r\n\t\t\t}\r\n\t\tcase ON_LINK_GOTTEN:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlinkIsFetched: true,\r\n\t\t\t\tlinkForSS: action.link,\r\n\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n//AC\r\nexport const setInitializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\nexport const setLinkForSS = (link) => ({ type: ON_LINK_GOTTEN, link })\r\n// export const toggleOnDialog = () => ({ type: ON_DIALOG })\r\n// export const setOutputPlayerVoiceFromClient = (voice) => ({ type: GET_OUTPUT_PLAYER_VOICE_FROM_CLIENT, voice })\r\nexport const setOutputPlayerScreenFromSS = (screen) => ({ type: GET_OUTPUT_PLAYER_SCREEN_FROM_SERVER, screen })\r\n\r\n//thunk\r\nexport const initializeApp = () => async (dispatch) => {\r\n\tlet promise = dispatch(getAuthUserData());\r\n\r\n\tPromise.all([promise]).then(() => {\r\n\t\tdispatch(setInitializedSuccess());\r\n\t})\r\n\r\n}","import { BufferStream } from \"buffer-stream-js\";\r\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\n\r\nimport {\r\n\tToGetway_FromUnknown_AuthSocket,\r\n\tToMovement_ToPlayerScene_PlayerTick,\r\n\tFromMovement_FromPlayerScene_PlayerJoin,\r\n\tFromMovement_FromPlayerScene_PlayerLeave,\r\n\tFromMovement_FromPlayerScene_PlayerList,\r\n\tFromSound_FromPlayerScene_PlayerVoice\r\n} from \"../../socket/constants.js\";\r\nimport { WSSSContext } from \"../../../utils/Context\";\r\nimport { setUserLeft, setUserJoined, setUsersFromList } from '../../redux/usersReducer.js';\r\nimport { WSTransferTest } from './WSTransferTest.js';\r\nimport { setOutputPlayerScreenFromSS } from \"../../redux/appReducer.js\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tflexGrow: 1\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2)\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1\r\n\t},\r\n}));\r\nconst style = {\r\n\tposition: 'absolute',\r\n\ttop: '6%',\r\n\tright: '10%',\r\n\twidth: 400,\r\n\tmaxHeight: '70vh',\r\n\tbgcolor: 'background.paper',\r\n\tboxShadow: 24,\r\n\tp: 4,\r\n\tborder: '1px solid grey',\r\n\toverflow: 'auto'\r\n};\r\n\r\nfunction isWSOpen(ws) {\r\n\treturn ws.readyState === 1\r\n}\r\n\r\nconst readPlayerFromPlayerList = (\r\n\tbuffer,\r\n\tstartOffset,\r\n\thasPosition = false\r\n) => {\r\n\tconst userUUIDLen = hasPosition === true ? 0 : 36;\r\n\r\n\tlet uuid = \"\";\r\n\tif (hasPosition === false) {\r\n\t\tbuffer.offset = startOffset;\r\n\t\tuuid = buffer.readUtf8String(userUUIDLen);\r\n\t}\r\n\tbuffer.offset = startOffset + userUUIDLen + 0;\r\n\tconst id = buffer.readUInt32LE();\r\n\r\n\tconst position = {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tz: 0,\r\n\t};\r\n\r\n\tbuffer.offset = startOffset + userUUIDLen + 4 + 0;\r\n\tposition.x = buffer.readFloatLE();\r\n\r\n\tbuffer.offset = startOffset + userUUIDLen + 4 + 4;\r\n\tposition.y = buffer.readFloatLE();\r\n\r\n\tbuffer.offset = startOffset + userUUIDLen + 4 + 8;\r\n\tposition.z = buffer.readFloatLE();\r\n\r\n\tbuffer.offset = startOffset + userUUIDLen + 4 + 12;\r\n\tconst state = buffer.readUInt8();\r\n\r\n\treturn {\r\n\t\tuuid: uuid,\r\n\t\tid: id,\r\n\t\tposition: position,\r\n\t\tstate: state\r\n\t};\r\n};\r\n\r\n// function Video(src, append) {\r\n// \tvar v = document.createElement(\"video\");\r\n// \tif (src != \"\") {\r\n// \t\tv.src = src;\r\n// \t}\r\n// \tif (append == true) {\r\n// \t\tdocument.body.appendChild(v);\r\n// \t}\r\n// \treturn v;\r\n// }\r\n\r\n// You can then use it like this:\r\n\r\n// var video = new Video(\"YOUR_VIDEO_URL\", true);\r\n// // do whatever you want...\r\n// video.height = 280;\r\n// video.width = 500;\r\n// video.controls = \"controls\";\r\n// video.play();\r\nlet context = new AudioContext();\r\n\r\n\r\nlet outputPlayerVoice = blobForPlay => {\r\n\tconst outputBlob = new Blob([blobForPlay], {\r\n\t\ttype: \"audio/webm;codecs=opus\",\r\n\t});\r\n\tconst fileReader = new FileReader();\r\n\tfileReader.readAsDataURL(outputBlob);\r\n\tfileReader.onloadend = () => {\r\n\r\n\t\tconst base64String = fileReader.result;\r\n\r\n\t\tconst audio = new Audio(base64String);\r\n\t\taudio.addEventListener('canplay', () => {\r\n\t\t\taudio.play();\r\n\t\t})\r\n\t};\r\n}\r\n\r\nexport const NavBar = ({ getUsersFromStore, setScreenBlob, record }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [openModal, setOpenModal] = useState(false);\r\n\tconst handleOpen = () => setOpenModal(true);\r\n\tconst handleClose = () => setOpenModal(false);\r\n\r\n\tconst [connected, setConnected] = useState(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { linkForSS, sessionTokenForSS, userUUID, getConnectionType, lobbyUUID } = useContext(WSSSContext)\r\n\r\n\tlet webSocketSS = null;\r\n\r\n\t//get self uuid\r\n\r\n\tconst [users, setUsers] = useState([])\r\n\r\n\t//ref for ws\r\n\tconst webSocket = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (linkForSS) start();\r\n\r\n\t\tfunction start() {\r\n\r\n\t\t\tconst linkSS = linkForSS ? linkForSS : console.log('Fetching the link...');\r\n\r\n\t\t\twebSocketSS = new WebSocket(linkSS);\r\n\t\t\twebSocket.current = webSocketSS;\r\n\t\t\twindow.webSocketSS = webSocketSS;\r\n\t\t\twebSocketSS.binaryType = \"arraybuffer\";\r\n\r\n\r\n\r\n\t\t\t// webSocketSS.onopen = () => {\r\n\t\t\t// \tconsole.log('Sound Server WebSocket is connected and its state is ' + webSocketSS.readyState);\r\n\t\t\t// \tconsole.log('Websocket open status is => ', opened);\r\n\r\n\t\t\t// \tconst array = new Uint8Array(4 + 36 + 1 + 36);\r\n\r\n\t\t\t// \tconst methodBuffer = new Uint8Array(\r\n\t\t\t// \t\tnew Uint32Array([ToGetway_FromUnknown_AuthSocket]).buffer\r\n\t\t\t// \t);\r\n\t\t\t// \tconst sessionBuffer = new TextEncoder().encode(\r\n\t\t\t// \t\tsessionTokenForSS\r\n\t\t\t// \t);\r\n\t\t\t// \tconst authType = new Uint8Array(\r\n\t\t\t// \t\tnew Uint32Array(1).buffer\r\n\t\t\t// \t);\r\n\t\t\t// \tconst targetUUID = new TextEncoder().encode(\r\n\t\t\t// \t\tuserUUIDForSS\r\n\t\t\t// \t);\r\n\r\n\t\t\t// \tarray.set(methodBuffer, 0);\r\n\t\t\t// \tarray.set(sessionBuffer, 4);\r\n\t\t\t// \tarray.set(authType, 40);\r\n\t\t\t// \tarray.set(targetUUID, 41);\r\n\r\n\t\t\t// \tif (!isWSOpen(webSocketSS)) return\r\n\t\t\t// \twebSocketSS.send(array);\r\n\t\t\t// };\r\n\r\n\r\n\t\t\twebSocketSS.onopen = () => {\r\n\t\t\t\tconst array = new Uint8Array(4 + 36 + 1 + 36)\r\n\r\n\t\t\t\tconst methodBuffer = new Uint8Array(new Uint32Array([ToGetway_FromUnknown_AuthSocket]).buffer)\r\n\t\t\t\tconst sessionBuffer = new TextEncoder().encode(sessionTokenForSS)\r\n\t\t\t\tconst locationUUIDBuffer = new TextEncoder().encode(lobbyUUID) // 36 LEN частное лобби или общее\r\n\t\t\t\tarray.set(methodBuffer, 0)\r\n\t\t\t\tarray.set(sessionBuffer, 4)\r\n\t\t\t\tarray.set(new Uint8Array([getConnectionType]), 4 + 36)\r\n\t\t\t\tarray.set(locationUUIDBuffer, 4 + 36 + 1)\r\n\r\n\t\t\t\twebSocketSS.send(array);\r\n\r\n\t\t\t\tif (webSocketSS.readyState === 1) {\r\n\t\t\t\t\tsetConnected(true)\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\r\n\t\t\twebSocketSS.onmessage = buffer => {\r\n\r\n\t\t\t\tconst message = new BufferStream(buffer.data);\r\n\t\t\t\tmessage.offset = 0;\r\n\t\t\t\tconst method = message.readInt32LE();\r\n\t\t\t\tswitch (method) {\r\n\t\t\t\t\tcase FromMovement_FromPlayerScene_PlayerList:\r\n\t\t\t\t\t\tmessage.offset = 4;\r\n\t\t\t\t\t\tconst countPlayers = message.readUInt32LE();\r\n\r\n\t\t\t\t\t\tconst users = [];\r\n\t\t\t\t\t\tfor (let index = 0; index < countPlayers; index++) {\r\n\t\t\t\t\t\t\tconst user = readPlayerFromPlayerList(\r\n\t\t\t\t\t\t\t\tmessage,\r\n\t\t\t\t\t\t\t\t4 /* Method */ +\r\n\t\t\t\t\t\t\t\t4 /* Count */ +\r\n\t\t\t\t\t\t\t\tindex *\r\n\t\t\t\t\t\t\t\t(36 /* UUID */ +\r\n\t\t\t\t\t\t\t\t\t4 /* ID */ +\r\n\t\t\t\t\t\t\t\t\t(4 + 4 + 4) /* Position */ +\r\n\t\t\t\t\t\t\t\t\t1) /* Flags */\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tif (user.uuid === userUUID) {\r\n\t\t\t\t\t\t\t\tconsole.log('the uuid is the same');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tusers.push(user);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdispatch(setUsersFromList(users))\r\n\r\n\t\t\t\t\t\tconsole.log(JSON.stringify(users));\r\n\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\"Method: FromMovement_FromPlayerScene_PlayerList, count: \" +\r\n\t\t\t\t\t\t\tcountPlayers,\r\n\t\t\t\t\t\t\tusers\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase FromMovement_FromPlayerScene_PlayerJoin:\r\n\t\t\t\t\t\tconst user = readPlayerFromPlayerList(message, 4);\r\n\t\t\t\t\t\tconsole.log(\"User Join: \" + user.uuid);\r\n\t\t\t\t\t\tdispatch(setUserJoined(user))\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase FromMovement_FromPlayerScene_PlayerLeave:\r\n\t\t\t\t\t\tmessage.offset = 4;\r\n\t\t\t\t\t\tconst uuid = message.readUtf8String(36);\r\n\t\t\t\t\t\tconsole.log(\"User Leave: \" + uuid);\r\n\t\t\t\t\t\tdispatch(setUserLeft(uuid))\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase FromSound_FromPlayerScene_PlayerVoice:\r\n\t\t\t\t\t\tconst user_from_voice = readPlayerFromPlayerList(message, 4, true);\r\n\t\t\t\t\t\t// Parse Voice Body\r\n\t\t\t\t\t\tconst voiceBody = new Uint8Array(message.buffer.buffer, 21);\r\n\t\t\t\t\t\tsetScreenBlob(new Blob([voiceBody], {\r\n\t\t\t\t\t\t\ttype: \"video/x-matroska;codecs=avc1\",\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t// Play Voice Body\r\n\t\t\t\t\t\toutputPlayerVoice(voiceBody);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log(\"Method: Unknown\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(\"WebSocket message received:\", method);\r\n\r\n\t\t\t};\r\n\r\n\t\t\twebSocketSS.onclose = (e) => {\r\n\t\t\t\tconsole.log('Sound Server Socket closed. Trying to reconnect...');\r\n\t\t\t\tconsole.log('Server closed with code => ', e.code);\r\n\r\n\t\t\t\tif (webSocketSS.readyState !== 1) {\r\n\t\t\t\t\tsetConnected(false)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (e.code !== 1005) {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tstart()\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Socket was closed by user');\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\twebSocketSS.onerror = (err) => {\r\n\t\t\t\tconsole.log('This error happened => ', err);\r\n\t\t\t\twebSocketSS.close()\r\n\t\t\t}\r\n\r\n\t\t\tlet sendPlayerTick = (\r\n\t\t\t\tposition,\r\n\t\t\t\tstate,\r\n\t\t\t\tvoiceBody\r\n\t\t\t) => {\r\n\r\n\t\t\t\tconst array = new Uint8Array(4 + 12 + 1 + voiceBody.byteLength);\r\n\r\n\t\t\t\tconst methodBuffer = new Uint8Array(new Uint32Array([ToMovement_ToPlayerScene_PlayerTick]).buffer\r\n\t\t\t\t);\r\n\r\n\t\t\t\tarray.set(methodBuffer, 0); // before 0, after 4\r\n\r\n\t\t\t\tarray.set(new Uint8Array(new Float32Array([position.x]).buffer), 4); // before 4, after 8\r\n\t\t\t\tarray.set(new Uint8Array(new Float32Array([position.y]).buffer), 4 + 4); // before 8, after 12\r\n\t\t\t\tarray.set(new Uint8Array(new Float32Array([position.z]).buffer), 4 + 8); // before 12, after 16\r\n\r\n\t\t\t\tarray.set(new Uint8Array([state]), 4 + 12); // before 16, after 17\r\n\r\n\t\t\t\tarray.set(voiceBody, 4 + 12 + 1); // before 17, after 4\r\n\r\n\t\t\t\tif (!isWSOpen(webSocketSS)) return\r\n\t\t\t\twebSocketSS.send(array)\r\n\t\t\t};\r\n\r\n\t\t\twindow.sendPlayerTick = audioChunk => sendPlayerTick({ x: 0, y: 0, z: 0 }, 0, audioChunk)\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tif (!webSocket.current && !linkForSS) {\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\twebSocket.current.close();\r\n\t\t\t\twebSocket.current = null;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}, [linkForSS]);\r\n\r\n\tuseMemo(() => {\r\n\t\tfunction pinging() {\r\n\t\t\tconst interval = setTimeout(() => {\r\n\t\t\t\tif (!record) {\r\n\t\t\t\t\twindow.sendPlayerTick(new Uint8Array());\r\n\t\t\t\t\tpinging();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tclearTimeout(interval);\r\n\t\t\t\t}\r\n\t\t\t}, 4000)\r\n\t\t}\r\n\r\n\t\tif (connected) {\r\n\t\t\tpinging();\r\n\t\t}\r\n\t}, [record, connected])\r\n\r\n\tuseMemo(() => {\r\n\t\tsetUsers(getUsersFromStore)\r\n\t\tconsole.log(users);\r\n\t}, [getUsersFromStore, users])\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"menu\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<WSTransferTest socket={webSocket.current} />\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t\tConnection Status:\r\n\t\t\t\t\t\t{connected ? ' Connected!' : ' Disconnected!'}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button color=\"inherit\" onClick={handleOpen}>Users List</Button>\r\n\t\t\t\t\t<Modal\r\n\t\t\t\t\t\taria-labelledby=\"transition-modal-title\"\r\n\t\t\t\t\t\taria-describedby=\"transition-modal-description\"\r\n\t\t\t\t\t\topen={openModal}\r\n\t\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\t\tcloseAfterTransition\r\n\t\t\t\t\t\tBackdropComponent={Backdrop}\r\n\t\t\t\t\t\tBackdropProps={{\r\n\t\t\t\t\t\t\ttimeout: 500,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Fade in={openModal}>\r\n\t\t\t\t\t\t\t<Box sx={style}>\r\n\t\t\t\t\t\t\t\t<Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\r\n\t\t\t\t\t\t\t\t\tUsers connected:\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tgetUsersFromStore.length !== 0 ? getUsersFromStore.map(u => {\r\n\t\t\t\t\t\t\t\t\t\treturn userUUID === u.uuid ?\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography id=\"transition-modal-description\" sx={{ mt: 2 }} key={u.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelf: <span style={{ color: 'red' }}>{u.uuid}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography id=\"transition-modal-description\" sx={{ mt: 2 }} key={u.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\tUser's UUID: <span style={{ color: 'blue' }}>{u.uuid}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t(<Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\r\n\t\t\t\t\t\t\t\t\t\t\tWaiting for users\r\n\t\t\t\t\t\t\t\t\t\t</Typography>)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useRef, useEffect, useMemo, useCallback } from \"react\";\r\nimport { ReactMic } from \"react-mic\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MicIcon from \"@mui/icons-material/Mic\";\r\nimport MicOffIcon from '@mui/icons-material/MicOff';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StopIcon from \"@mui/icons-material/Stop\";\r\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nimport \"./microphone.css\";\r\nimport { Card } from \"@material-ui/core\";\r\n// import { setOutputPlayerVoiceFromClient, toggleOnDialog } from \"../../redux/appReducer\";\r\nimport Recorder from 'recorder-js';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\ticon: {\r\n\t\theight: 38,\r\n\t\twidth: 38\r\n\t},\r\n\treactmic: {\r\n\t\twidth: \"80%\",\r\n\t\theight: 30\r\n\t},\r\n\tflex: {\r\n\t\tflex: 1\r\n\t}\r\n}));\r\n\r\nexport default function Microphone({ size, record, setRecord }) {\r\n\r\n\tconst [stopRecord, setStopRecord] = useState(true)\r\n\r\n\tfunction analyticVoice(stream) {\r\n\t\tconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\t\tconst analyser = audioContext.createAnalyser();\r\n\t\tconst microphone = audioContext.createMediaStreamSource(stream);\r\n\t\tconst javascriptNode =\r\n\t\t\taudioContext.createScriptProcessor(1024, 1, 1);\r\n\r\n\t\tanalyser.smoothingTimeConstant = 0;\r\n\t\tanalyser.fftSize = 1024;\r\n\r\n\t\tmicrophone.connect(analyser);\r\n\t\tanalyser.connect(javascriptNode);\r\n\t\tjavascriptNode.connect(audioContext.destination);\r\n\t\treturn javascriptNode\r\n\t}\r\n\r\n\t// audio: {\r\n\t// \techoCancellation: true,\r\n\t// \tnoiseSuppression: true,\r\n\t// }\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (!stopRecord) {\r\n\t\t\tnavigator.mediaDevices.getUserMedia({\r\n\t\t\t\taudio: {\r\n\t\t\t\t\tautoGainControl: true, channelCount: 1, echoCancellation: false, delay: 0, noiseSuppression: false, sampleRate: 48000, sampleSize: 16, volume: 1.0\r\n\t\t\t\t}, video: false\r\n\t\t\t}).then((stream) => {\r\n\t\t\t\t// analyticVoice(stream)\r\n\t\t\t\tconst mediaRecorder = new window.MediaRecorder(stream);\r\n\t\t\t\tmediaRecorder.start(1000);\r\n\r\n\t\t\t\twindow.str = stream;\r\n\t\t\t\tlet audioChunks = []\r\n\r\n\t\t\t\tmediaRecorder.addEventListener(\"dataavailable\", (event) => {\r\n\t\t\t\t\tif (event.data.size > 0) {\r\n\t\t\t\t\t\taudioChunks.push(event.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tmediaRecorder.addEventListener(\"stop\", () => {\r\n\r\n\t\t\t\t\tif (audioChunks.length > 0) {\r\n\r\n\t\t\t\t\t\tconst mimeType = audioChunks[0].type;\r\n\t\t\t\t\t\tconst audioBlob = new Blob(audioChunks, { type: mimeType });\r\n\r\n\t\t\t\t\t\taudioBlob.arrayBuffer().then((arrayBuffer) => {\r\n\t\t\t\t\t\t\tconst audioBuffer = new Uint8Array(arrayBuffer);\r\n\r\n\t\t\t\t\t\t\twindow.sendPlayerTick(audioBuffer);\r\n\t\t\t\t\t\t\taudioChunks = [];\r\n\t\t\t\t\t\t\tif (window.str !== null) {\r\n\t\t\t\t\t\t\t\tmediaRecorder.start(1000);\r\n\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tif (mediaRecorder.state !== 'inactive') {\r\n\t\t\t\t\t\t\t\t\t\tmediaRecorder.stop();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (mediaRecorder.state !== 'inactive') {\r\n\t\t\t\t\t\tmediaRecorder.stop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000);\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t}, [stopRecord])\r\n\r\n\tconst startRecording = () => {\r\n\t\tsetRecord(true)\r\n\t\tsetStopRecord(false)\r\n\t};\r\n\r\n\tconst totallyStop = () => {\r\n\t\tsetRecord(false);\r\n\t\tsetStopRecord(true);\r\n\t\twindow.str.getTracks().forEach(function (track) {\r\n\t\t\ttrack.stop();\r\n\t\t});\r\n\t\twindow.str = null;\r\n\t}\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Grid container justifyContent=\"center\">\r\n\t\t\t\t<Grid item>\r\n\r\n\t\t\t\t\t{!record && stopRecord ?\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t<IconButton onClick={startRecording}>\r\n\t\t\t\t\t\t\t\t<MicIcon className={classes.icon} style={{ width: size, height: size }} />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<IconButton onClick={totallyStop}>\r\n\t\t\t\t\t\t\t<MicOffIcon className={classes.icon} style={{ width: size, height: size }} />\r\n\t\t\t\t\t\t</IconButton>}\r\n\r\n\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Card >\r\n\t\t\t\t{/* <ReactMic\r\n\t\t\t\t\trecord={record}\r\n\t\t\t\t\tclassName={classes.reactmic}\r\n\t\t\t\t\tvisualSetting=\"frequencyBars\"\r\n\t\t\t\t\techoCancellation={false}\r\n\t\t\t\t\tnoiseSuppression={false}\r\n\t\t\t\t\tstrokeColor=\"green\"\r\n\t\t\t\t\tbackgroundColor=\"white\"\r\n\t\t\t\t/> */}\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid item container justifyContent=\"center\" xs={12}>\r\n\t\t\t\t\t\t\t{!record && stopRecord && (\r\n\t\t\t\t\t\t\t\t<IconButton onClick={startRecording}>\r\n\t\t\t\t\t\t\t\t\t<FiberManualRecordIcon\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: red[500] }}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.icon}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{record && !stopRecord && (\r\n\t\t\t\t\t\t\t\t<IconButton onClick={totallyStop}>\r\n\t\t\t\t\t\t\t\t\t<StopIcon className={classes.icon} />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t);\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nimport { appReducer } from './appReducer';\r\nimport { usersReducer } from './usersReducer';\r\n\r\n\r\nlet reducers = combineReducers(\r\n\t{\r\n\t\tapp: appReducer,\r\n\t\tusers: usersReducer\r\n\t}\r\n)\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n","export default __webpack_public_path__ + \"static/media/preloader.e40a641e.gif\";","import React from 'react'\r\nimport preloader from '../../../assets/src/preloader/preloader.gif'\r\n\r\n\r\nexport const Preloader = () => {\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"lds-facebook\">\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t)\r\n}","export const routesTechPractices = [\r\n\t'/tecpractice1',\r\n\t'/tecpractice2',\r\n\t'/tecpractice3',\r\n\t'/tecpractice4',\r\n\t'/tecpractice5',\r\n\t'/tecpractice6'\r\n]\r\nexport const routesStands = [\r\n\t'/stand1',\r\n\t'/stand2',\r\n\t'/stand3',\r\n\t'/stand4',\r\n\t'/stand5',\r\n\t'/stand6',\r\n\t'/stand7',\r\n\t'/stand8',\r\n\t'/stand9',\r\n\t'/stand10',\r\n\t'/stand11',\r\n\t'/stand12',\r\n\t'/stand13',\r\n\t'/stand14',\r\n\t'/stand15',\r\n\t'/stand16',\r\n\t'/stand17',\r\n\t'/stand18',\r\n\t'/stand19',\r\n\t'/stand20',\r\n\t'/stand21',\r\n\t'/stand22',\r\n\t'/stand23'\r\n]","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport const ScreenCapture = React.forwardRef((props, ref) => {\r\n\treturn (\r\n\r\n\t\t<video ref={ref} autoPlay height=\"400\" width='100%'></video>\r\n\r\n\r\n\t)\r\n})","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Button from '@mui/material/Button';\r\n\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport Microphone from '../microphone/Microphone';\r\nimport { Grid } from '@material-ui/core';\r\nimport VoiceChatIcon from '@mui/icons-material/VoiceChat';\r\nimport { routesTechPractices, routesStands } from './../../../utils/routes'\r\nimport './chatBar.css'\r\nimport { Switch, Route, NavLink } from 'react-router-dom'\r\nimport { ChatRoom1 } from './rooms/СhatRoom1';\r\nimport { СhatRoom2 } from './rooms/СhatRoom2';\r\nimport { СhatRoom3 } from './rooms/СhatRoom3';\r\nimport { СhatRoom4 } from './rooms/СhatRoom4';\r\nimport { useSelector } from 'react-redux';\r\nimport { Preloader } from '../preloader/Preloader';\r\nimport { ScreenCapture } from '../screenCapture/ScreenCapture';\r\nimport { WSSSContext } from '../../../utils/Context';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setOutputPlayerScreenFromSS } from '../../redux/appReducer';\r\n\r\nconst drawerWidth = 240;\r\nconst roomsTechPracticeNames = ['Техпрактика 1', 'Техпрактика 2', 'Техпрактика 3', 'Техпрактика 4 (Don\\'t)', 'Техпрактика 5', 'Техпрактика 6']\r\n\r\nvar displayMediaOptions = {\r\n\tvideo: {\r\n\t\tcursor: \"always\"\r\n\t},\r\n\taudio: false\r\n};\r\n\r\n\r\nexport const ChatBar = ({ getUsersFromStore, screenBlob, setScreenBlob, record, setRecord }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { userUUID } = useContext(WSSSContext)\r\n\r\n\tconst [open, setOpen] = useState(true);\r\n\tconst [openSt, setOpenSt] = useState(false);\r\n\tconst screenCaptureRef = useRef();\r\n\r\n\tlet videoTracks = screenCaptureRef.current;\r\n\r\n\tlet outputPlayerScreen = (blobForPlay) => {\r\n\t\tlet src = URL.createObjectURL(blobForPlay);\r\n\t\tvideoTracks.src = src;\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (screenBlob) {\r\n\t\t\toutputPlayerScreen(screenBlob)\r\n\t\t\tsetScreenBlob(null)\r\n\t\t}\r\n\t}, [screenBlob])\r\n\r\n\tasync function startCapture() {\r\n\t\ttry {\r\n\t\t\tlet stream = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions);\r\n\t\t\tconsole.log(videoTracks.srcObject);\r\n\t\t\twindow.screenStream = stream;\r\n\t\t\t// videoTracks = stream;\r\n\t\t\tconst mediaRecorder = new window.MediaRecorder(stream);\r\n\t\t\tlet screenChunks = [];\r\n\t\t\tmediaRecorder.start();\r\n\r\n\t\t\tmediaRecorder.addEventListener(\r\n\t\t\t\t\"dataavailable\",\r\n\t\t\t\t(event) => {\r\n\t\t\t\t\tscreenChunks.push(event.data);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tmediaRecorder.addEventListener(\"stop\", () => {\r\n\r\n\t\t\t\tif (screenChunks.length > 0) {\r\n\r\n\t\t\t\t\tconst mimeType = screenChunks[0].type;\r\n\t\t\t\t\tconst audioBlob = new Blob(screenChunks, { type: mimeType });\r\n\r\n\t\t\t\t\taudioBlob.arrayBuffer().then((arrayBuffer) => {\r\n\t\t\t\t\t\tconst audioBuffer = new Uint8Array(arrayBuffer);\r\n\r\n\t\t\t\t\t\twindow.sendPlayerTick(audioBuffer);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tscreenChunks = [];\r\n\r\n\t\t\t\tif (window.screenStream.active) {\r\n\t\t\t\t\tmediaRecorder.start();\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (mediaRecorder.state !== 'inactive') {\r\n\t\t\t\t\t\t\tmediaRecorder.stop();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (mediaRecorder.state !== 'inactive') {\r\n\t\t\t\t\tmediaRecorder.stop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Error: \" + err);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction stopCapture() {\r\n\t\tlet tracks = window.screenStream.getTracks();\r\n\t\ttracks.forEach(track => track.stop());\r\n\t\tscreenCaptureRef.current.srcObject = null;\r\n\t\tdispatch(setOutputPlayerScreenFromSS(null))\r\n\t}\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetOpen(!open);\r\n\t}\r\n\tconst handleClickSt = () => {\r\n\r\n\t\tsetOpenSt(!openSt);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid >\r\n\t\t\t<Box sx={{ display: 'flex' }}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: drawerWidth,\r\n\t\t\t\t\t\tflexShrink: 0,\r\n\t\t\t\t\t\t[`& .MuiDrawer-paper`]: { marginTop: '5em', width: drawerWidth, boxSizing: 'border-box' },\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Box sx={{ overflow: 'auto' }}>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<ListItemButton onClick={handleClick}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<InboxIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Техпрактики\" />\r\n\t\t\t\t\t\t\t\t{open ? <ExpandLess /> : <ExpandMore />}\r\n\t\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t\t<Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t\t\t\t{roomsTechPracticeNames.map((text, index = 0) => (\r\n\t\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\t\tto={routesTechPractices[index]}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'none', color: 'inherit', display: 'block' }}\r\n\t\t\t\t\t\t\t\t\t\tactiveClassName='activeLink'\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\texact>\r\n\t\t\t\t\t\t\t\t\t\t<ListItem button sx={{ pl: 4 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<VoiceChatIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={text} />\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<ListItemButton onClick={handleClickSt}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<InboxIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Стенды\" />\r\n\t\t\t\t\t\t\t\t{openSt ? <ExpandLess /> : <ExpandMore />}\r\n\t\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t\t<Collapse in={openSt} timeout=\"auto\" unmountOnExit>\r\n\t\t\t\t\t\t\t\t{routesStands.map((text, index = 0) => (\r\n\t\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\t\tto={routesStands[index]}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'none', color: 'inherit', display: 'block' }}\r\n\t\t\t\t\t\t\t\t\t\tactiveClassName='activeLink'\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\texact>\r\n\t\t\t\t\t\t\t\t\t\t<ListItem button sx={{ pl: 4 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<VoiceChatIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={text} />\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Microphone size={'1.5em'} record={record}\r\n\t\t\t\t\t\tsetRecord={setRecord} />\r\n\t\t\t\t</Drawer>\r\n\t\t\t\t<Box sx={{ width: 'calc(100% - 240px)', display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t\t\t<Box sx={{ width: '100%', m: '1em auto', bgcolor: 'background.paper', display: 'flex', flexDirection: 'row' }}>\r\n\t\t\t\t\t\t<Box component=\"main\" sx={{ flexGrow: 1, p: 1 }}>\r\n\t\t\t\t\t\t\t<Microphone size={'2em'} record={record}\r\n\t\t\t\t\t\t\t\tsetRecord={setRecord} />\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t{/* <Route exact path='/'> <Typography paragraph>Выберите комнату для чата слева</Typography></Route>\r\n\t\t\t\t\t\t<Route exact path='/room1' component={ChatRoom1} />\r\n\t\t\t\t\t\t<Route exact path='/room2' component={СhatRoom2} />\r\n\t\t\t\t\t\t<Route exact path='/room3' component={СhatRoom3} />\r\n\t\t\t\t\t\t<Route exact path='/room4' component={СhatRoom4} />\r\n\t\t\t\t\t\t<Route path='*' render={() => <div>There is no such chat room!</div>} /> */}\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tsx={{ marginTop: '2em', width: '100%', height: 200, maxWidth: 360, bgcolor: 'background.paper' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={'Список пользователей'} />\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tgetUsersFromStore.length !== 0 ?\r\n\t\t\t\t\t\t\t\t\t\tgetUsersFromStore.map((user, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn user.uuid === userUUID ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index} component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={`Я: ${user.uuid}`} sx={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem key={index} component=\"div\" disablePadding>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={user.uuid} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<Preloader />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t<Box sx={{ width: '100%', margin: '0 auto', bgcolor: 'background.paper', display: 'flex', flexDirection: 'row' }}>\r\n\t\t\t\t\t\t<Box sx={{ marginLeft: '.5em', display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\r\n\t\t\t\t\t\t\t<Button sx={{ marginBottom: '1em' }} variant=\"outlined\" onClick={startCapture}>Начать трансляцию</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={stopCapture}>Закончить трансляцию</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<ScreenCapture ref={screenCaptureRef} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\r\n\t\t\t</Box>\r\n\t\t</Grid>\r\n\t);\r\n}","import React, { useCallback, useMemo } from 'react'\r\nimport { Input } from '@mui/material';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { getWayConnection } from '../../socket/getWayConnect';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { mainRoot } from '../../socket/constants';\r\n\r\nexport const Main = ({ sessionUUID, lobbyUUID, setLobbyUUID }) => {\r\n\r\n\tconst handleConnectToGetWay = () => {\r\n\t\tgetWayConnection(sessionUUID, lobbyUUID, 1);\r\n\t}\r\n\r\n\tconst handleGetLobbyUUID = useCallback((e) => {\r\n\t\tsetLobbyUUID(e.target.value)\r\n\t}, [lobbyUUID, setLobbyUUID])\r\n\r\n\treturn (\r\n\t\t<Box sx={{ m: 2 }}>\r\n\t\t\t<Box sx={{ m: 2 }}>\r\n\t\t\t\t<Box sx={{ m: 1 }}>Нажми на кнопку, чтобы войти в общую говорилку</Box>\r\n\r\n\t\t\t\t<NavLink exact to={mainRoot + '/lobby'} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n\t\t\t\t\t<Button variant=\"outlined\" onClick={handleConnectToGetWay}>Войти в общее лобби</Button>\r\n\t\t\t\t</NavLink>\r\n\r\n\t\t\t</Box>\r\n\t\t\t<Box sx={{ marginTop: 20 }}>\r\n\t\t\t\t<Box sx={{ m: 2 }}>Введи ID, чтобы создать комнату или законнектиться в неё</Box>\r\n\r\n\t\t\t\t<Stack spacing={2} direction=\"row\" justifyContent='center'>\r\n\t\t\t\t\t<Input onChange={handleGetLobbyUUID} />\r\n\t\t\t\t\t<NavLink exact to={mainRoot + `/lobby/${lobbyUUID}`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n\t\t\t\t\t\t<Button variant=\"outlined\" onClick={handleConnectToGetWay}>Войти в стенд</Button>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Stack>\r\n\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t)\r\n}","import { setLinkForSS } from '../redux/appReducer';\r\nimport store from '../redux/store'\r\nimport {\r\n\tgetWayWebSocket,\r\n\tToGetway_FromUnknown_AuthSocket,\r\n\tFromGetway_AuthSocket_Response,\r\n\tToGetway_FromPlayer_GetSoundServer,\r\n\tFromGetway_FromPlayer_GetSoundServerResponse\r\n} from \"./constants.js\";\r\n\r\n// lobbyUUID = \"123456789012345678901234567890123456\"\r\nexport function getWayConnection(sessionUUID, lobbyUUID, connectionType = 1) {\r\n\r\n\tconst newWS = new WebSocket(getWayWebSocket);\r\n\r\n\tconnect();\r\n\r\n\tfunction connect() {\r\n\t\tnewWS.onopen = () => {\r\n\t\t\tconsole.log('GetWay Socket connected');\r\n\t\t\tnewWS.send(JSON.stringify({ method: ToGetway_FromUnknown_AuthSocket, token: sessionUUID, type: connectionType }))\r\n\t\t}\r\n\t\tnewWS.onmessage = (data) => {\r\n\t\t\tlet dataFromGetWay = JSON.parse(data.data);\r\n\t\t\tconsole.log(dataFromGetWay);\r\n\r\n\t\t\tif (dataFromGetWay.method != undefined) {\r\n\t\t\t\tswitch (dataFromGetWay.method) {\r\n\r\n\t\t\t\t\tcase FromGetway_AuthSocket_Response:\r\n\t\t\t\t\t\tconsole.log(dataFromGetWay.user);\r\n\t\t\t\t\t\tconsole.log();\r\n\t\t\t\t\t\tnewWS.send(JSON.stringify({ method: ToGetway_FromPlayer_GetSoundServer, lobby_uuid: lobbyUUID }));\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase FromGetway_FromPlayer_GetSoundServerResponse:\r\n\t\t\t\t\t\tlet link = `wss://${dataFromGetWay.ip}:${dataFromGetWay.port}`;\r\n\t\t\t\t\t\tstore.dispatch(setLinkForSS(link))\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log('Unexpected method');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnewWS.onclose = () => {\r\n\t\t\tconsole.log('GetWay websocket closed. trying to reconnect...');\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconnect()\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t}\r\n}\r\n","import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport './App.css';\nimport { NavBar } from \"./components/common/navbar/NavBar\";\nimport Microphone from \"./components/common/microphone/Microphone\";\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getWayConnection } from './components/socket/getWayConnect';\nimport { sendPlayerTick } from './components/socket/serverConnection';\nimport { Preloader } from './components/common/preloader/Preloader'\nimport { getWayWebSocket, mainRoot } from './components/socket/constants';\nimport { WSSSContext } from './utils/Context';\nimport { initializeApp, setLinkForSS } from './components/redux/appReducer';\nimport { chatRoom1 } from './components/common/chatRooms/rooms/СhatRoom1';\nimport { ChatBar } from './components/common/chatRooms/chatBar';\nimport { Main } from './components/common/main/Main'\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initializeApp());\n  }, [])\n\n  const [loadinglink, setLoaded] = useState(false);\n\n  const [contextWSSS, setContextWSSS] = useState({\n    linkForSS: '',\n    sessionTokenForSS: '',\n    userUUID: '',\n    type: '',\n    lobbyUUID: ''\n  })\n  const [screenBlob, setScreenBlob] = useState(null)\n\n  const [lobbyUUID, setLobbyUUID] = useState('');\n  const [record, setRecord] = useState(false);\n\n  //get initial data for GetWay and SoundServer\n  const linkIsFetched = useSelector(state => state.app.linkIsFetched)\n  const linkForSS = useSelector(state => state.app.linkForSS)\n  const sessionTokenForSS = useSelector(state => state.users.self.session_uuid)\n  const userUUID = useSelector(state => state.users.self.user_uuid)\n  const getConnectionType = useSelector(state => state.app.type)\n\n  //get users from store\n  const getUsersFromStore = useSelector(state => state.users.users)\n\n  useMemo(() => {\n    dispatch(setLinkForSS);\n    setContextWSSS({ linkForSS, sessionTokenForSS, userUUID, getConnectionType, lobbyUUID })\n\n  }, [linkForSS, sessionTokenForSS, userUUID, getConnectionType, lobbyUUID])\n\n  // useEffect(() => {\n  //   getWayConnection()\n  // }, [])\n\n\n  useMemo(() => {\n    setLoaded(linkIsFetched)\n  }, [linkIsFetched]);\n\n\n\n\n  return (\n    <WSSSContext.Provider value={contextWSSS}>\n      <div className=\"home\" style={{ textAlign: \"center\" }}>\n\n        <NavBar\n          getUsersFromStore={getUsersFromStore}\n          setScreenBlob={setScreenBlob}\n          record={record}\n          setRecord={setRecord}\n        />\n        <Switch>\n\n          <Route exact path={mainRoot} render={() => <Main lobbyUUID={lobbyUUID} setLobbyUUID={setLobbyUUID} sessionUUID={sessionTokenForSS} />} />\n          <Route exact path={mainRoot + `/lobby/${lobbyUUID}`} render={() => <ChatBar\n            getUsersFromStore={getUsersFromStore}\n            screenBlob={screenBlob}\n            setScreenBlob={setScreenBlob}\n            record={record}\n            setRecord={setRecord}\n          />} />\n\n          <Route path='*'\n            render={() => <div> 404 Page not found!</div>} />\n        </Switch>\n\n      </div>\n    </WSSSContext.Provider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}